name: CI Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, "3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Lint with flake8
      run: |
        pip install flake8
        flake8 src/ tests/ --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 src/ tests/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Format check with black
      run: |
        pip install black
        black --check --diff src/ tests/

    - name: Type check with mypy (optional)
      run: |
        pip install mypy
        mypy src/ --ignore-missing-imports || true

    - name: Run tests
      run: |
        python test_runner.py
      env:
        DATABASE_URL: sqlite:///./test.db
        VECTOR_STORE_PATH: ./test_vector_store

    - name: Generate coverage report
      run: |
        pip install coverage
        coverage run -m pytest tests/ -v --tb=short || true
        coverage report || true
        coverage xml || true

  docker-build:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - uses: actions/checkout@v4

    - name: Build Docker image
      run: |
        docker build -t proarch-analytics .

    - name: Test Docker image
      run: |
        docker run --rm proarch-analytics python -c "import sys; print('Python version:', sys.version)"
