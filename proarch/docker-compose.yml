version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    container_name: proarch-api
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=sqlite:///./data/cost_analytics.db
      - VECTOR_STORE_PATH=./data/vector_store
      - MODEL_NAME=deepseek/deepseek-r1-0528-qwen3-8b:free
      - OPENROUTER_API_KEY=${OPENROUTER_API_KEY}
      - ENABLE_CACHE=true
      - CACHE_TTL_MINUTES=30
      - API_HOST=0.0.0.0
      - API_PORT=8000
      - CLIENT_ORIGINS=http://localhost:3000,http://localhost:8501,http://frontend:8501
      - LOG_LEVEL=INFO
    volumes:
      - ./data:/app/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: proarch-frontend
    ports:
      - "8501:8501"
    environment:
      - API_BASE_URL=http://api:8000
    depends_on:
      api:
        condition: service_healthy
    restart: unless-stopped

  # Data initialization service (runs once)
  init-data:
    build:
      context: .
      dockerfile: Dockerfile.api
    container_name: proarch-init
    environment:
      - DATABASE_URL=sqlite:///./data/cost_analytics.db
      - VECTOR_STORE_PATH=./data/vector_store
    volumes:
      - ./data:/app/data
    command: ["python", "run_ingestion_fixed.py"]
    profiles: ["init"]
    depends_on:
      - api

  # Database service (SQLite is file-based, but here's PostgreSQL option)
  # db:
  #   image: postgres:15-alpine
  #   container_name: proarch-db
  #   environment:
  #     POSTGRES_DB: cost_analytics
  #     POSTGRES_USER: proarch
  #     POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
  #   ports:
  #     - "5432:5432"
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #     - ./init.sql:/docker-entrypoint-initdb.d/init.sql
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -U proarch"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5
  #   restart: unless-stopped

volumes:
  postgres_data:

networks:
  default:
    name: proarch-network
